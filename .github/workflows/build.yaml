name: Build
on:
  pull_request:
    branches:
      - main
      - develop
  push:
    branches:
      - main
      - develop
jobs:
  build:
    name: Build & Test Service with Java 17
    runs-on: ubuntu-latest
    steps:
      - id: checkout
        name: Checkout
        uses: actions/checkout@v3

      - id: jdk
        name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - id: build
        name: Build
        run: ./mvnw -B clean package -DskipTests -ff

      - id: test
        name: Test
        run: ./mvnw -B verify

      - id: publish
        name: Publish Artifact
        uses: actions/upload-artifact@master
        with:
          name: auth-service-artifact
          path: ./target/*.jar
  deploy:
    permissions:
      contents: 'read'
      id-token: 'write'
    name: Deploy Docker Image
    runs-on: ubuntu-latest
    needs: build
    if: ${{ false }}  # disable for now
    #if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - id: checkout
        name: Checkout Repository
        uses: actions/checkout@v2
      - id: artifact
        name: Download Artifact
        uses: actions/download-artifact@master
        with:
          name: auth-service-artifact
          path: ./target
      - id: authenticate-gcp
        name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          token_format: access_token
          workload_identity_provider: ${{ secrets.GCP_WL_IDP }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
          access_token_lifetime: 300s
      - id: login
        name: Login to Artifact Registry
        uses: docker/login-action@v1
        with:
          registry: us-east1-docker.pkg.dev
          username: oauth2accesstoken
          # Get the acces token from the previous step.
          password: ${{ steps.auth.outputs.access_token }}

      - name: Get tag
        id: get-tag
        run: echo ::set-output name=short_ref::${GITHUB_REF#refs/*/}

      - id: docker-push-tagged
        uses: docker/build-push-action@v2
        name: Tag Docker image and push to Google Artifact Registry
        with:
          push: true
          #TODO replace variable here
          tags: |
              us-east1-docker.pkg.dev/<Project-ID>/<Registry-Repo>/<Image-Name>:${{ steps.get-tag.outputs.short_ref }}
              us-east1-docker.pkg.dev/<Project-ID>/<Registry-Repo>/<Image-Name>:latest

